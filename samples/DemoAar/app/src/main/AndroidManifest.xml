<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.ibm.mce.samples.gcm" >

    <!-- C2D_MESSAGE is required for receiving GCM messages -->
    <permission
        android:name="com.ibm.mce.samples.gcm.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <!-- C2D_MESSAGE is required for receiving GCM messages -->
    <uses-permission android:name="com.ibm.mce.samples.gcm.permission.C2D_MESSAGE" />
    <!-- c2dm.permission.RECEIVE is required for receiving GCM messages -->
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
    <!-- INTERNET is required for calling the MCE server -->
    <uses-permission android:name="android.permission.INTERNET" />
    <!-- WAKE_LOC is required for running scheduled tasks -->
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <!-- RECEIVE_BOOT_COMPLETED is required for performing SDK task on device startup -->
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED" />
    <!-- VIBRATE is required for notification configuration -->
    <uses-permission android:name="android.permission.VIBRATE" />
    <!-- CALL_PHONE is optional. It is only required is the dial action is used -->
    <uses-permission android:name="android.permission.CALL_PHONE" />
    <!-- ACCESS_FINE_LOCATION is optional. It is only required if location services needs to use GPS location -->
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <!-- ACCESS_COARSE_LOCATION is optional. It is only required if location services needs to use network location -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <!-- BLUETOOTH is optional. It is only required if iBeacons are supported -->
    <uses-permission android:name="android.permission.BLUETOOTH" />
    <!-- BLUETOOTH_ADMIN is optional. It is only required if iBeacons are supported -->
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN" />

    <application
        android:name=".SampleApplication"
        android:allowBackup="false"
        android:icon="@drawable/icon"
        android:label="@string/app_name"
        android:theme="@style/AppTheme" >

        <!-- This is required for google play services -->
        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <!-- The provider is needed for the SDK database -->
        <provider
            android:name="com.ibm.mce.sdk.db.Provider"
            android:authorities="com.ibm.mce.samples.gcm.MCE_PROVIDER"
            android:exported="false" />





        <activity
            android:name=".MainSampleMenuActivity"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name=".RegistrationDetailsSampleActivity"
            android:label="@string/registration_details_name"
            android:parentActivityName=".MainSampleMenuActivity" >
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="com.ibm.mce.samples.gcm.MainSampleMenuActivity" />
            >
        </activity>
        <activity
            android:name=".AttributesSampleActivity"
            android:label="@string/attributes_name"
            android:parentActivityName=".MainSampleMenuActivity" >
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="com.ibm.mce.samples.gcm.MainSampleMenuActivity" />
        </activity>
        <activity
            android:name=".EventSampleActivity"
            android:label="@string/event_test_name"
            android:parentActivityName=".MainSampleMenuActivity" >
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="com.ibm.mce.samples.gcm.MainSampleMenuActivity" />
        </activity>
        <activity
            android:name="com.ibm.mce.sdk.plugin.displayweb.DisplayWebViewActivity">
        </activity>
        <activity
            android:name="com.ibm.mce.sdk.plugin.inbox.RichInboxActivity" android:configChanges="orientation" >
        </activity>
        <activity
            android:name="com.ibm.mce.sdk.plugin.inbox.InboxMessageDisplayActivity" android:configChanges="orientation" >
        </activity>

        <meta-data
            android:name="com.google.android.maps.v2.API_KEY"
            android:value="@string/google_maps_key" />

        <activity
            android:name=".LocationActivity"
            android:label="@string/title_activity_location" >
            <meta-data
                android:name="android.support.PARENT_ACTIVITY"
                android:value="com.ibm.mce.samples.gcm.MainSampleMenuActivity" />
        </activity>

        <!-- GcmReceiver is required for handling GCM messages -->
        <receiver android:name="com.google.android.gms.gcm.GcmReceiver">
            <intent-filter android:permission="com.google.android.c2dm.permission.SEND" >
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
                <category android:name="com.ibm.mce.samples.gcm" />
            </intent-filter>
            <intent-filter android:permission="com.google.android.c2dm.permission.SEND" android:priority="999">
                <action android:name="com.google.android.c2dm.intent.REGISTRATION" />
                <category android:name="com.ibm.mce.samples.gcm" />
            </intent-filter>
        </receiver>

        <receiver android:name=".MceNotifier" >
            <intent-filter>
                <action android:name="com.ibm.mce.sdk.NOTIFIER" />
            </intent-filter>
        </receiver>

        <!-- NotifActionReceiver is required for notification handling -->
        <receiver android:name="com.ibm.mce.sdk.notification.NotifActionReceiver" />

        <!-- AlarmReceiver is required for SDK scheduled tasks and device status updates -->
        <receiver android:name="com.ibm.mce.sdk.wi.AlarmReceiver" >
            <intent-filter>
                <action android:name="android.intent.action.BOOT_COMPLETED" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.TIMEZONE_CHANGED" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.PACKAGE_REPLACED" />

                <data android:scheme="package" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.intent.action.LOCALE_CHANGED" />
            </intent-filter>
        </receiver>

        <!-- FCM Registration -->
        <service
            android:name="com.ibm.mce.sdk.fcm.FcmInstanceIdService">
            <intent-filter>
                <action android:name="com.google.firebase.INSTANCE_ID_EVENT"/>
            </intent-filter>
        </service>

        <!-- FCM Messages -->
        <service
            android:name="com.ibm.mce.sdk.fcm.FcmMessagingService">
            <intent-filter>
                <action android:name="com.google.firebase.MESSAGING_EVENT"/>
            </intent-filter>
        </service>

        <!-- LocationUpdateCaller is used for scheduling location updates -->
        <receiver android:name="com.ibm.mce.sdk.location.LocationUpdateCaller" />

        <!-- MceGcmListenerService is required for GCM handling -->
        <service android:name="com.ibm.mce.sdk.gcm.MceGcmListenerService" android:exported="false" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </service>
        <!-- EventsAlarmListener is required for event handling -->
        <service android:name="com.ibm.mce.sdk.events.EventsAlarmListener" />
        <!-- PhoneHomeIntentService is required to allow the client to contact the server to update state -->
        <service android:name="com.ibm.mce.sdk.registration.PhoneHomeIntentService" />
        <!-- RegistrationIntentService is required for SDK registration -->
        <service android:name="com.ibm.mce.sdk.registration.RegistrationIntentService" />
        <!-- AttributesQueueConsumer is required for attributes handling -->
        <service android:name="com.ibm.mce.sdk.attributes.AttributesQueueConsumer" />
        <!-- SnoozeIntentService is optional. It is required only if snooze action is used -->
        <service android:name="com.ibm.mce.sdk.plugin.snooze.SnoozeIntentService" />
        <!-- InboxUpdateService is optional. It is used for retrieving inbox updates from the MCE server. It is required only if inbox or in-app messages are used -->
        <service android:name="com.ibm.mce.sdk.plugin.inbox.InboxUpdateService" />
        <!-- LocationRetrieveService is optional. It is used for retrieving the device location. It is required only if locations are enabled -->
        <service android:name="com.ibm.mce.sdk.location.LocationRetrieveService" />
        <!-- GeofenceIntentService is optional. It is used to receive geofence events. It is required only if locations are enabled and geofences are used -->
        <service android:name="com.ibm.mce.sdk.location.GeofenceIntentService" />
        <!-- LocationEventsIntentService is optional. It is used to handle location events backoff. It is required only if locations are enabled -->
        <service android:name="com.ibm.mce.sdk.location.LocationEventsIntentService" />
        <!-- LocationSyncAlarmListener is optional. It is used to scheduled location sync. It is required only if locations are enabled -->
        <service android:name="com.ibm.mce.sdk.location.LocationSyncAlarmListener" />
        <!-- MceBluetoothScanner is optional. It is used to verify bluetooth scan. It is required only if iBeacons is used -->
        <service android:name="com.ibm.mce.sdk.beacons.MceBluetoothScanner" />
        <!-- BeaconsVerifier is optional. It is used to verify Bluetooth scan. It is required only if iBeacons are used -->
        <service android:name="com.ibm.mce.sdk.beacons.BeaconsVerifier" />
        <!-- MceJobService is used for launching a job while the app is in the foreground. This is only used in Android L and above -->
        <service android:name="com.ibm.mce.sdk.job.MceJobService" android:permission="android.permission.BIND_JOB_SERVICE"/>


    </application>

</manifest>
